<!DOCTYPE html>
<html>

<head>
    <title>Permissions</title>
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">

    <link rel="stylesheet" href="styles.css">
</head>

<body>

    <div class="alert-box" id="confirmationBox">
        Are you sure you want to delete this row?
        <br>
        <div class="red-text">THIS IS IMMEDIATE AND PERMANANT!!!</div>
        <br>
        <button class="btn btn-red" id="yesButton">Yes</button>
        <button class="btn btn-grey" onclick="cancelDelete()">No</button>
    </div>

    <div class="alert-box" id="uploadBox">
        <h1>File Upload</h1>
        <br>
        <div class="red-text">THIS IS IMMEDIATE AND PERMANANT!!!
            <br>THIS WILL REPLACE ALL CURRENT SETTINGS!!!
        </div>
        <br>
        <form action="/csv?data=perms" method="POST" enctype="multipart/form-data">
            <input type="file" name="myFile">
            <input type="submit" class="btn btn-red" value="Upload">
        </form>
        <button class="btn btn-red" onclick="cancelUpload()">Cancel</button>
    </div>

    <h1>Permissions</h1>

    <button onclick="createRow()">Create Row</button>
    <button onclick="saveChanges()">Save Changes</button>
    <button onclick="downloadCSV()">Download .csv</button>
    <button onclick="uploadCSV()">Upload .csv</button>
    <button onclick="gotoAdminPanel()">Return</button>

    <br>
    <br>
    
    <table id="csvTable"></table>

    <script>
        let currentRow;

        function createCheckbox(value) {
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.value = value;

            checkbox.checked = (checkbox.value == "1");
            handleCheckbox(checkbox)

            return checkbox;
        }

        function handleCheckbox(checkbox) {
            checkbox.addEventListener('change', function () {
                if (checkbox.checked) {
                    checkbox.value = '1';
                } else {
                    checkbox.value = '0';
                }
            });
        }

        function saveChanges() {
            const tableRows = Array.from(document.querySelectorAll('#csvTable tr'));
            const updatedData = tableRows.map(row =>
                Array.from(row.querySelectorAll('input')).map(input => input.value)
            );

            const formattedData = updatedData
                .map(row => row.join(','))
                .join('\n');

            fetch('/perms', {
                method: 'POST',
                headers: {
                    'Content-Type': 'text/csv'
                },
                body: formattedData
            })
                .then(response => response.text())
                .then(message => {
                    console.log(message);
                    location.reload();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        function downloadCSV() {
            fetch('/csv?data=perms')
                .then(response => response.text())
                .then(data => {
                    // Create a Blob from the CSV data
                    const blob = new Blob([data], { type: 'text/csv' });

                    // Create a temporary anchor element
                    const anchor = document.createElement('a');
                    anchor.href = window.URL.createObjectURL(blob);
                    anchor.download = 'data.csv';
                    anchor.click();

                    // Clean up
                    window.URL.revokeObjectURL(anchor.href);
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Handle errors if necessary
                });
        }

        function createRow() {
            const table = document.getElementById('csvTable');
            const newRow = table.insertRow();

            // Define the number of cells/columns in the new row (adjust as per your requirement)
            const numOfTextColumns = 2; // Number of text input columns
            const numOfCheckboxColumns = 3; // Number of checkbox columns

            newRow.insertCell();

            for (let i = 0; i < numOfTextColumns; i++) {
                const cell = newRow.insertCell();
                const input = document.createElement('input');
                input.type = 'text';
                cell.appendChild(input);
            }

            for (let i = 0; i < numOfCheckboxColumns; i++) {
                const cell = newRow.insertCell();
                const checkbox = document.createElement('input');
                checkbox.type = 'checkbox';
                cell.appendChild(checkbox);
            }
        }

        function gotoAdminPanel() {
            window.location.href = '/dashboard';
        }

        function loadCSV() {
            fetch('/csv?data=perms')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch CSV');
                    }
                    return response.text();
                })
                .then(data => {
                    const rows = data.split('\n').map(row => row.split(','));
                    rows.pop();
                    const table = document.getElementById('csvTable');

                    // Create table header
                    const headerRow = document.createElement('tr');
                    rows[0].forEach(headerText => {
                        const th = document.createElement('th');
                        th.textContent = headerText;
                        headerRow.appendChild(th);
                    });
                    table.appendChild(headerRow);

                    // Create table rows
                    for (let i = 1; i < rows.length; i++) {
                        let content = '';
                        const tr = document.createElement('tr');

                        // Add delete button to each row
                        const deleteCell = document.createElement('td');
                        const deleteBtn = document.createElement('button');
                        deleteBtn.textContent = 'Delete';
                        deleteBtn.addEventListener('click', function (event) {
                            const rowToDelete = event.target.closest('tr');
                            const rowIndex = Array.from(rowToDelete.parentNode.children).indexOf(rowToDelete) - 1; // Adjust the index since you skipped the header row
                            showConfirmation(rowIndex);
                        });
                        deleteCell.appendChild(deleteBtn);
                        tr.appendChild(deleteCell);

                        // Populate cells with input fields and data
                        for (let j = 0; j < rows[i].length - 4; j++) {
                            const td = document.createElement('td');
                            const input = document.createElement('input');
                            input.type = 'text'
                            input.value = rows[i][j];
                            td.appendChild(input);
                            tr.appendChild(td);
                        }
                        // Create a cell for checkboxes
                        const checkboxCell = document.createElement('td');
                        checkboxCell.classList.add('table-cell')

                        checkboxDiv = document.createElement('div');
                        checkboxDiv.classList.add('checkbox-container');

                        const labels = ['Read', 'Edit', 'Delete']; // Define the labels array here

                        for (let k = rows[i].length - 4; k < rows[i].length - 1; k++) {
                            const checkboxWrapper = document.createElement('label');
                            checkboxWrapper.classList.add('checkbox-label');

                            const checkbox = createCheckbox(rows[i][k]); // Create the checkbox

                            checkboxWrapper.appendChild(checkbox);

                            const label = document.createElement('span');
                            label.textContent = labels[k - (rows[i].length - 4)];
                            checkboxWrapper.appendChild(label);

                            checkboxCell.appendChild(checkboxWrapper);
                        }
                        tr.appendChild(checkboxCell);

                        table.appendChild(tr);

                    }
                })
                .catch(error => {
                    console.error(error);
                });
        }

        function showConfirmation(rowIndex) {
            const confirmationBox = document.getElementById('confirmationBox');
            confirmationBox.style.display = 'block';
            document.getElementById('yesButton').setAttribute('onclick', `deleteRow(${rowIndex})`);
        }

        function deleteRow(rowIndex) {
            // Send a request to the server to delete the row from the CSV file
            fetch(`/perms?index=${rowIndex + 1}`, {
                method: 'DELETE'
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to delete row');
                    }
                    console.log('Row deleted successfully');
                    const table = document.getElementById('csvTable');
                    table.deleteRow(rowIndex + 1); // Adjust the index to account for the header row
                })
                .catch(error => {
                    console.error('Error:', error);
                    // If there's an error, you might want to handle row deletion on the frontend accordingly
                    // For example, by showing an error message or reverting the deletion on the frontend
                });

            hideConfirmation();
        }

        function hideConfirmation() {
            const confirmationBox = document.getElementById('confirmationBox');
            confirmationBox.style.display = 'none';
        }

        function cancelDelete() {
            hideConfirmation();
        }

        function uploadCSV() {
            const confirmationBox = document.getElementById('uploadBox');
            confirmationBox.style.display = 'block';
        }

        function cancelUpload() {
            const confirmationBox = document.getElementById('uploadBox');
            confirmationBox.style.display = 'none';
        }

        loadCSV();
    </script>
</body>

</html>